set number                        " line numbers

set hlsearch                      " highlight search occurrences
set ignorecase                    " ignore case in search patterns
set smartcase                     " no ignore case when pattern is uppercase
set incsearch                     " show search results while typing
set wrapscan                      " searches wrap around the end of the file

set gdefault                      " substitute all occurrences in line per default
set history=10000                 " keep x lines of command line history
set scrolloff=15 sidescrolloff=10  " keep some lines before and after the cursor visible
set clipboard=unnamedplus,unnamed,ideaput " integrate with system clipboard

" Don't use Ex mode, use Q for formatting.
map Q gq

set NERDTree
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
set multiple-cursors
set commentary
set surround                      " emulate vim-surround plugin
set ideajoin

" add which-key plugin
set which-key
set notimeout "do not hide popup until finished

" use relative numbers
set relativenumber

" set <leader> to <space>
let mapleader = " "

" edit ideavim config
nnoremap <leader>vv :e ~/.ideavimrc<CR>
nnoremap <leader>vr :source ~/.ideavimrc<CR>

nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" change font size
nmap + <Action>(EditorIncreaseFontSize)
nmap - <Action>(EditorDecreaseFontSize)
nmap <leader>= <Action>(EditorResetFontSize)

" find remaps
nmap <leader>ff <Action>(GotoFile)
nmap <leader>fw <Action>(TextSearchAction)
nmap <leader>fc <Action>(GotoClass)

" --------- lsp remaps -----------

" Code style
nmap <leader>lf <Action>(ReformatCode)
nmap <leader>lo <Action>(OptimizeImports)

" Generate
nmap <leader>rg <Action>(Generate)
nmap <leader>rr <Action>(RunAnything)

" Renaming
nmap <leader>lr <Action>(RenameElement)
vmap <leader>lr <Action>(RenameElement)

" Movement
nmap <leader>lu <Action>(ShowUsages)
vmap <leader>lu <Action>(ShowUsages)
nmap <leader>ld <Action>(GotoDeclaration)
vmap <leader>ld <Action>(GotoDeclaration)
vmap <leader>lt  <Action>(GotoTest)
nmap <leader>lt  <Action>(GotoTest)

" Documentation
nmap <leader>lh <Action>(QuickJavaDoc)
vmap <leader>lh <Action>(QuickJavaDoc)

" Refactoring
nmap <leader>ll <Action>(RefactoringMenu)
vmap <leader>ll <Action>(RefactoringMenu)
nmap <leader>lv <Action>(IntroduceVariable)
vmap <leader>lv <Action>(IntroduceVariable)
nmap <leader>lm <Action>(ExtractMethod)
vmap <leader>lm <Action>(ExtractMethod)
nmap <leader>lc <Action>(IntroduceConstant)
vmap <leader>lc <Action>(IntroduceConstant)
nmap <leader>la <Action>(ShowIntentionActions)

" Show file in Project Explorer
nmap <leader>e :NERDTreeFind<CR>
vmap <leader>e :NERDTreeFind<CR>

nmap <leader>tt <Action>(ActivateTerminalToolWindow)

" Diagnostics
nmap <leader>le <Action>(GotoNextError)
nmap <leader>lE <Action>(GotoPreviousError)
vmap <leader>le <Action>(GotoNextError)
vmap <leader>lE <Action>(GotoPreviousError)

" Test Execution
vmap <leader>rt <Action>(RunClass)
nmap <leader>rt <Action>(RunClass)

" --------- end lsp remaps -----------

nmap <leader>m  <Action>(HideAllWindows)

" experimental git integration lazygit
nmap <leader>gg  <Action>(LazyGit.Open)

" input mode remaps
imap <C-p> <Action>(ParameterInfo)
