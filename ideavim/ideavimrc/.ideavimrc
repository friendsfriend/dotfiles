" -----------------------------------------------------------
" Options
" -----------------------------------------------------------
set number                        " line numbers
set leader = " "

set hlsearch                      " highlight search occurrences
set ignorecase                    " ignore case in search patterns
set smartcase                     " no ignore case when pattern is uppercase
set incsearch                     " show search results while typing
set wrapscan                      " searches wrap around the end of the file

set gdefault                      " substitute all occurrences in line per default
set history=10000                 " keep x lines of command line history
set scrolloff=15 sidescrolloff=10  " keep some lines before and after the cursor visible
set clipboard=unnamedplus,unnamed,ideaput " integrate with system clipboard

" use relative numbers
set relativenumber

" -----------------------------------------------------------
" Plugins
" -----------------------------------------------------------

" Adds vim keymap to project view.
set NERDTree

" Shows yanked values in green background
Plug 'machakann/vim-highlightedyank'

" Allows surrounding selections with strings
" cs: To change the surroundings.
" ds: To delete the surroundings.
" ys: To add surroundings.
" S: To surround the currently selected text.
Plug 'tpope/vim-surround'

" Allows commenting.
" gcc: Comment current line.
" gc + motion: Comment using the motion.
" gc: Comment selected text.
Plug 'tpope/vim-commentary'

" Allows selecting text and swapping it somewhere else.
" cx + motion: Select the first block to swap or select the second, and perform the swap.
" cxx : Similar to cx but for the current line.
" X: Similar to cx but for the select text.
" cxc: Cancel pending exchange.
Plug 'tommcdo/vim-exchange'

" Allows selecting statements in the same intendation level. 
" ii: Indent level
" ai: Indent level plus one line above
" aI: Indent level plus one line above and below
Plug 'michaeljsmith/vim-indent-object'

" Allows selecting parameters.
" aa: All parameters
" ia: One parameter
Plug 'vim-scripts/argtextobj.vim'
let g:argtextobj_pairs="[:],(:),<:>"

" Allows selecting the whole file
" ae: Whole file
Plug 'kana/vim-textobj-entire'

" Adds new commands for easier selection
" aq: Around any quotes.
" iq: Inside any quotes.
" ab: Around any parentheses, curly braces, and square brackets.
" ib: Inside any parentheses, curly braces, and square brackets.
set mini-ai

" -----------------------------------------------------------
" Custom Keymap
" -----------------------------------------------------------

" Don't use Ex mode, use Q for formatting.
map Q gq

nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" input mode remaps
imap <C-p> <Action>(ParameterInfo)

" -----------------------------------------------------------
" Ataman
" -----------------------------------------------------------
nnoremap <SPACE> :action LeaderAction<cr>
vnoremap <SPACE> :action LeaderAction<cr>

" -----------------------------------------------------------
" Flash
" -----------------------------------------------------------

nmap s <Action>(flash.search)
xmap s <Action>(flash.search)

" enhance vim f (find for char in characters to the right of the current cursor)
nmap f <Action>(flash.find)
xmap f <Action>(flash.find)
" enhance vim F (find for char in characters to the left of the current cursor)
nmap F <Action>(flash.find_backward)
xmap F <Action>(flash.find_backward)
" enhance vim t (till for char in characters to the right of the current cursor)
nmap t <Action>(flash.till)
xmap t <Action>(flash.till)
" enhance vim T (till for char in characters to the left of the current cursor)
nmap T <Action>(flash.till_backward)
xmap T <Action>(flash.till_backward)
" enhance vim ; (Repeat the last f/F/t/T search)
nmap ; <Action>(flash.repeat)
xmap ; <Action>(flash.repeat)
" enhance vim , (Repeat the last f/F/t/T search backward)
nmap , <Action>(flash.repeat_backward)
xmap , <Action>(flash.repeat_backward)
